# x_k = (-1)^k * x^(2k+1) / (2k-1)! (2k+1)!


def recurrently(x, k):
    """ Знаходження елементів послідовності використовуючи
            рекурентні співвідношення
        :param k: Номер члена послідовності, що необхідно знайти
        :param x: Параметр
        :return:  Знайдений член послідовності. """
    a = - x ** 3 / 6  # початкове значення
    for i in range(1, k):
        a *= - (x ** 2) / ((2 * i) * (2 * i + 1) * (2 * i + 2) * (2 * i + 3))
    return a


def generator(x, k):
    """ Генератор """
    a = - x ** 3 / 6  # початкове значення
    yield a
    for i in range(1, k):
        a *= - (x ** 2) / ((2 * i) * (2 * i + 1) * (2 * i + 2) * (2 * i + 3))  # обчилюємо наступний член послідовності
        yield a  # повертаємо поточний член послідовності


# Головна програма
k = int(input("k = "))
x = float(input("x = "))
print()
print(recurrently(x, k))
print()
for el in generator(x, k):
    print(el)
